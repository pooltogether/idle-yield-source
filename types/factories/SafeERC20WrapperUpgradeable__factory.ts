/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SafeERC20WrapperUpgradeable } from "../SafeERC20WrapperUpgradeable";

export class SafeERC20WrapperUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeERC20WrapperUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<SafeERC20WrapperUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SafeERC20WrapperUpgradeable {
    return super.attach(address) as SafeERC20WrapperUpgradeable;
  }
  connect(signer: Signer): SafeERC20WrapperUpgradeable__factory {
    return super.connect(signer) as SafeERC20WrapperUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20WrapperUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SafeERC20WrapperUpgradeable;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b31806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633ba93f261161005b5780633ba93f26146100f057806370a0823114610103578063a9059cbb14610124578063dd62ed3e1461013757600080fd5b8063095ea7b31461008d57806310bad4cf146100b557806311e330b2146100ca57806323b872dd146100dd575b600080fd5b6100a061009b3660046109e3565b61014a565b60405190151581526020015b60405180910390f35b6100c86100c3366004610a2c565b61016d565b005b6100c86100d8366004610a2c565b610188565b6100a06100eb3660046109a8565b6101a0565b6100c86100fe366004610a2c565b6101c6565b61011661011136600461095c565b610227565b6040519081526020016100ac565b6100a06101323660046109e3565b6102ab565b610116610145366004610976565b6102c5565b603354600090610164906001600160a01b0316848461034b565b50600192915050565b603354610185906001600160a01b03166000836104ac565b50565b603354610185906001600160a01b03166000836105c7565b6033546000906101bb906001600160a01b031685858561068e565b5060015b9392505050565b603354604051631dd49f9360e11b8152600481018390526001600160a01b0390911690633ba93f2690602401600060405180830381600087803b15801561020c57600080fd5b505af1158015610220573d6000803e3d6000fd5b5050505050565b6033546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a082319060240160206040518083038186803b15801561026d57600080fd5b505afa158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190610a44565b92915050565b603354600090610164906001600160a01b031684846106c6565b603354604051636eb1769f60e11b81526001600160a01b0384811660048301528381166024830152600092169063dd62ed3e9060440160206040518083038186803b15801561031357600080fd5b505afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf9190610a44565b8015806103d45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610a44565b155b6104445760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526104a790849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106f6565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156104f757600080fd5b505afa15801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f9190610a44565b9050818110156105935760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b606482015260840161043b565b6040516001600160a01b0384166024820152828203604482018190529061022090869063095ea7b360e01b90606401610470565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561061357600080fd5b505afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b9190610a44565b6106559190610aab565b6040516001600160a01b03851660248201526044810182905290915061068890859063095ea7b360e01b90606401610470565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106889085906323b872dd60e01b90608401610470565b6040516001600160a01b0383166024820152604481018290526104a790849063a9059cbb60e01b90606401610470565b600061074b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107c89092919063ffffffff16565b8051909150156104a757808060200190518101906107699190610a0c565b6104a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161043b565b60606107d784846000856107df565b949350505050565b6060824710156108405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161043b565b843b61088e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161043b565b600080866001600160a01b031685876040516108aa9190610a5c565b60006040518083038185875af1925050503d80600081146108e7576040519150601f19603f3d011682016040523d82523d6000602084013e6108ec565b606091505b50915091506108fc828286610907565b979650505050505050565b606083156109165750816101bf565b8251156109265782518084602001fd5b8160405162461bcd60e51b815260040161043b9190610a78565b80356001600160a01b038116811461095757600080fd5b919050565b60006020828403121561096d578081fd5b6101bf82610940565b60008060408385031215610988578081fd5b61099183610940565b915061099f60208401610940565b90509250929050565b6000806000606084860312156109bc578081fd5b6109c584610940565b92506109d360208501610940565b9150604084013590509250925092565b600080604083850312156109f5578182fd5b6109fe83610940565b946020939093013593505050565b600060208284031215610a1d578081fd5b815180151581146101bf578182fd5b600060208284031215610a3d578081fd5b5035919050565b600060208284031215610a55578081fd5b5051919050565b60008251610a6e818460208701610acf565b9190910192915050565b6020815260008251806020840152610a97816040850160208701610acf565b601f01601f19169190910160400192915050565b60008219821115610aca57634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610aea578181015183820152602001610ad2565b83811115610688575050600091015256fea2646970667358221220d3e356d3651c51030e2fac25d867d2cebb01d3aefb52bfa59235418d403cc33a64736f6c63430008040033";
